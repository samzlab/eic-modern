name: Coverage Badge

on:
  push:
    branches: [ main ]
    paths:
      - 'packages/core/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - '.github/workflows/coverage-badge.yml'

permissions:
  contents: write

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate coverage
      run: npm run test:coverage -w packages/core

    - name: Extract coverage percentage
      id: coverage
      run: |
        COVERAGE=$(grep -o 'All files[^|]*|[^|]*|[^|]*|[^|]*|[^|]*' packages/core/coverage/lcov-report/index.html | grep -o '[0-9.]*%' | head -1 || echo "100%")
        echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
        echo "Coverage: $COVERAGE"

    - name: Create coverage badge
      run: |
        # Extract coverage percentage from lcov.info
        COVERAGE=$(grep -o "LF:[0-9]*" packages/core/coverage/lcov.info | awk -F: '{sum += $2} END {print sum}')
        COVERED=$(grep -o "LH:[0-9]*" packages/core/coverage/lcov.info | awk -F: '{sum += $2} END {print sum}')
        
        if [ "$COVERAGE" -gt 0 ]; then
          PERCENTAGE=$(awk "BEGIN {printf \"%.1f\", ($COVERED/$COVERAGE)*100}")
        else
          PERCENTAGE="0.0"
        fi
        
        echo "Coverage: $PERCENTAGE%"
        
        # Determine color based on percentage
        if (( $(echo "$PERCENTAGE >= 90" | bc -l) )); then
          COLOR="brightgreen"
        elif (( $(echo "$PERCENTAGE >= 80" | bc -l) )); then
          COLOR="yellow"
        else
          COLOR="red"
        fi
        
        # Create directory if it doesn't exist
        mkdir -p .github/assets
        
        # Generate badge using shields.io
        curl -s "https://img.shields.io/badge/coverage-${PERCENTAGE}%25-${COLOR}" > .github/assets/coverage.svg

    - name: Commit coverage badge
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .github/assets/coverage.svg
        if ! git diff --staged --quiet; then
          git commit -m "Update coverage badge [skip ci]"
          git push
        else
          echo "No changes to coverage badge"
        fi
